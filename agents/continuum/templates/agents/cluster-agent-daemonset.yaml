# DaemonSet for Cluster Agent
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mlsysops-cluster-agent
  namespace: mlsysops-framework
spec:
  selector:
    matchLabels:
      app: cluster-agent
  template:
    metadata:
      labels:
        app: cluster-agent
    spec:
      serviceAccountName: mlsysops-agents-sa
      # Use nodeSelector to target nodes with mlsysops/continuumLayer=cluster
      nodeSelector:
        mlsysops/continuumLayer: "cluster"
      containers:
        - name: cluster-agent
          image: harbor.nbfc.io/mlsysops/cluster-agent:latest
          imagePullPolicy: Always
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: REDIS_HOST
              value: karmada.mlsysops.eu
            - name: CLUSTER_NAME
              value: uth-karmada
            - name: EJABBERD_DOMAIN
              value: karmada.mlsysops.eu
            - name: NODE_PASSWORD
              value: "1234"
            - name: PYTHONPATH
              value: "/workdir/fluidity"
            - name: DESCRIPTION_PATH
              value: "/etc/mlsysops/desc"
          volumeMounts:
            - name: description-volume
              mountPath: /etc/mlsysops/descriptions
            - name: cluster-config-volume
              mountPath: /etc/mlsysops/config
            - name: policies-volume
              mountPath: /etc/mlsysops/policies
      volumes:
        - name: cluster-config-volume
          configMap:
            name: cluster-agent-config
        - name: description-volume
          configMap:
            name: system-description
        - name: policies-volume
          configMap:
            name: cluster-policies
---
# Empty ConfigMap for Cluster Policies
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-policies
  namespace: mlsysops-framework
data: {}

---
# Empty ConfigMap for agent configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-agent-config
  namespace: mlsysops-framework
data: {}
