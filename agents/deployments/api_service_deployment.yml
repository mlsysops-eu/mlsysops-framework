apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlsysops-api-service
  namespace: mlsysops-framework
  labels:
    app: api-service
spec:
  replicas: 1 # Adjust replicas based on your scaling needs
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      containers:
        - name: nb-api-service
          image: registry.mlsysops.eu/agent/northbound-api:0.0.0
          ports:
            - containerPort: 8000
              name: http-port
          env:
            - name: REDIS_HOST
              value: "172.25.27.72" # Replace with the relevant Redis host IP or service name
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DB_NUMBER
              value: "0"
            - name: REDIS_QUEUE_NAME
              value: "valid_descriptions_queue"
            - name: REDIS_PASSWORD
              value: "secret"
            - name: REDIS_CHANNEL_NAME
              value: "my_channel"
            - name: REDIS_DICT_NAME
              value: "system_app_hash"
          command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
          volumeMounts:
            - name: app-config-volume
              mountPath: /app/config
      volumes:
        - name: app-config-volume
          hostPath:
            path: ./config # Replace with the full absolute path on your Kubernetes nodes
            type: DirectoryOrCreate
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: mlsysops-api-service
  namespace: mlsysops-framework
spec:
  selector:
    app: api-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: NodePort