name: Build & publish

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    runs-on: ["base-dind-2204-amd64"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Find SHA
      run: |
        if [[ "${{github.event.pull_request.head.sha}}" != "" ]]
        then
          echo "ARTIFACT_SHA=$(echo ${{github.event.pull_request.head.sha}})" >> $GITHUB_ENV
          echo "CI_COMMIT_TAG=0.0.0-${{ github.run_id }}" >> $GITHUB_ENV
        else
          echo "ARTIFACT_SHA=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "CI_COMMIT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
        fi

    - name: Install python dependencies
      run: |
        sudo apt update && sudo apt install -y python3.10-venv
        python3 -m venv .venv
        . .venv/bin/activate
        .venv/bin/python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then .venv/bin/python3 -m pip install -r requirements.txt; fi

    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    #- name: Test with pytest
    #  env:
    #    PYTHONPATH: .
    #  run: |
    #    python3 -m build
    #    python3 -m pytest

    #- name: Test with coverage
    #  env:
    #    PYTHONPATH: .
    #  run: |
    #    python3 -m pytest tests/

    - name: Build pip package
      run: |
        . .venv/bin/activate
        .venv/bin/python3 -m pip install build
        cd mlsysops-cli
        ../.venv/bin/python3 -m build
        VERSION=$(python3 setup.py --version)
        PYVER=$(python3 --version | awk '{print $2}' | awk -F\. '{print $1 $2 }')

    # FIXME: add pypi publish step
    - name: Publish package
      #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}
        packages-dir: mlsysops-cli/dist
